From 1111111111111111111111111111111111111111 Mon Oct 24 04:54:18 2025
From: Narscode <narscode@users.noreply.github.com>
Date: Fri, 24 Oct 2025 04:54:18 +0000
Subject: [PATCH] Add Streamlit app and deployment files

Add Streamlit entrypoint, requirements, config, and deployment instructions.
---
 streamlit_app.py                        | 116 +
 .streamlit/config.toml                  |   3 +
 DEPLOY_TO_STREAMLIT.md                 | 141 +
 requirements.txt                        | 11 +
 4 files changed, 271 insertions(+)
 create mode 100644 streamlit_app.py
 create mode 100644 .streamlit/config.toml
 create mode 100644 DEPLOY_TO_STREAMLIT.md
 create mode 100644 requirements.txt

diff --git a/streamlit_app.py b/streamlit_app.py
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/streamlit_app.py
@@ -0,0 +1,116 @@
+import streamlit as st
+import os
+from typing import Optional
+
+# Optional: for embedding folium maps
+try:
+    from streamlit_folium import st_folium
+    import folium
+except Exception:
+    st_folium = None
+    folium = None
+
+st.set_page_config(page_title="AI Dei GO - Route Assistant (Yogyakarta)", layout="wide")
+
+st.title("AI Dei GO — Route Assistant for Yogyakarta")
+st.markdown("A simple Streamlit front-end that exposes functionality from the repository.\n\nReplace the placeholder logic below with calls into your project's modules.")
+
+# Sidebar: API key and settings
+st.sidebar.header("Settings")
+api_key = st.sidebar.text_input("OpenAI API key (or put in Streamlit Secrets)", type="password")
+if not api_key and "OPENAI_API_KEY" in st.secrets:
+    api_key = st.secrets["OPENAI_API_KEY"]
+
+st.sidebar.markdown("---")
+
+# Main inputs
+st.header("Find route")
+start = st.text_input("Start location", "Yogyakarta, Indonesia")
+end = st.text_input("End location", "Prambanan Temple, Yogyakarta")
+
+col1, col2 = st.columns([1, 2])
+with col1:
+    if st.button("Get route"):
+        if not api_key:
+            st.error("Set an OpenAI API key in the sidebar or in Streamlit secrets.")
+        else:
+            st.info(f"Retrieving route from '{start}' to '{end}'...")
+
+            # TODO: Replace this placeholder with your repo's route-calculation functions.
+            # Example:
+            # from your_package import route_functions
+            # route = route_functions.get_route(start, end, api_key=api_key)
+            # then render route on the map or show steps
+
+            # Placeholder map centered on Yogyakarta
+            center_coords = (-7.795579, 110.369495)  # Yogyakarta city center
+            if folium is not None and st_folium is not None:
+                m = folium.Map(location=center_coords, zoom_start=12)
+                folium.Marker(location=center_coords, popup="Yogyakarta Center").add_to(m)
+                st_folium(m, width=700, height=500)
+            else:
+                st.write("Map preview requires 'streamlit_folium' and 'folium' packages.\nInstall them or render results with Streamlit's st.map/st.pydeck_chart.")
+
+with col2:
+    st.subheader("Example output")
+    st.markdown("Replace this area with step-by-step directions, estimated distance/time, and any AI-generated tips.")
+    st.info("This is a placeholder — wire this UI to your repository's functions to show real results.")
+
+st.markdown("---")
+st.markdown("Developer notes:\n- Add your project imports at the top and call them from the button handler.\n- Keep secrets out of the repo; use Streamlit secrets for API keys.")
+
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1,11 @@
+streamlit
+pandas
+numpy
+geopandas
+shapely
+folium
+streamlit-folium
+requests
+openai
+scikit-learn
+python-dotenv
+
diff --git a/.streamlit/config.toml b/.streamlit/config.toml
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/.streamlit/config.toml
@@ -0,0 +1,3 @@
+[server]
+headless = true
+enableCORS = false
+port = 8501
+
diff --git a/DEPLOY_TO_STREAMLIT.md b/DEPLOY_TO_STREAMLIT.md
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/DEPLOY_TO_STREAMLIT.md
@@ -0,0 +1,141 @@
+# Deploying this repo to Streamlit Cloud
+
+1. Add an app entrypoint file (e.g. streamlit_app.py) at the repository root (example included).
+2. Add requirements.txt listing streamlit and other dependencies (example included).
+3. Commit and push changes to GitHub.
+
+4. Go to https://share.streamlit.io and sign in with GitHub.
+5. Click "New app":
+   - Repository: select this repository
+   - Branch: choose the branch (e.g., main)
+   - Main file path: streamlit_app.py
+6. Click "Deploy".
+
+7. Add secrets (if needed):
+   - In the Streamlit Cloud app page, open "Settings" → "Secrets"
+   - Add keys such as OPENAI_API_KEY or other credentials.
+
+Notes:
+- If your project needs system-level libs (e.g., GDAL for geopandas), you may need a Docker-based deploy or use a hosting provider that allows OS-level packages. Streamlit Cloud installs Python packages from requirements.txt but sometimes geospatial binary dependencies fail to build. In that case, consider using a Dockerfile and deploying with Render / Google Cloud Run / other provider.
+- For interactive folium maps, use streamlit_folium for embedding.
+- If large data files are required, consider storing them in a hosted location (S3 / Git LFS) and load them at runtime.
+- Keep secrets out of the repo. Use Streamlit secrets or environment variables.
+
+----
+
+Local test steps
+
+- Create a virtual environment and install dependencies:
+  - python -m venv .venv
+  - source .venv/bin/activate  (Windows: .venv\\Scripts\\activate)
+  - pip install -r requirements.txt
+- Run the app:
+  - streamlit run streamlit_app.py
+
+Deploy to Streamlit Cloud (detailed)
+1. Push your code to GitHub.
+2. Visit https://share.streamlit.io and log in with GitHub.
+3. Click "New app" → pick the repository, branch and the main file path (streamlit_app.py).
+4. Set secrets (Settings → Secrets) for API keys (e.g., OPENAI_API_KEY).
+5. Deploy — Streamlit Cloud will install dependencies from requirements.txt and run the app.
+
+Common gotchas
+- Missing or incompatible binary dependencies (GDAL, PROJ) for geopandas: Streamlit Cloud may fail installing these. If you see errors installing geopandas, either:
+  - Use pure-Python alternatives (avoid geopandas) or
+  - Build a Docker image that includes system libs and deploy elsewhere (Render, Heroku with buildpacks, Google Cloud Run).
+- Large data files in the repo can cause slow deploys. Host them externally and fetch at runtime.
+- Keep secrets out of the repo. Use Streamlit secrets or environment variables.
+
+If you need the files adjusted (for example, remove geopandas from requirements or wire streamlit_app.py to a specific module in your repo), tell me what module/function to call and I can update the patch.
+
-- 
2.0.0